{"ast":null,"code":"import React from\"react\";import{strategyArray}from\"../data\";import EmptyState from\"./EmptyState\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const StrategyCards=_ref=>{let{selectedView,selectedDate}=_ref;// Find the view data that matches the selected view\nconst viewData=strategyArray.find(item=>item.View===selectedView);// Get the strategies for the selected date (or empty array if none)\nconst strategies=(viewData===null||viewData===void 0?void 0:viewData.Value[selectedDate])||[];// Count occurrences of each strategy\nconst strategyCounts=strategies.reduce((acc,strategy)=>{acc[strategy]=(acc[strategy]||0)+1;return acc;},{});if(strategies.length===0){return/*#__PURE__*/_jsx(EmptyState,{selectedDate:selectedDate});}return/*#__PURE__*/_jsx(\"div\",{className:\"strategy-container\",children:Object.entries(strategyCounts).map(_ref2=>{let[strategy,count]=_ref2;return/*#__PURE__*/_jsxs(\"div\",{className:\"strategy-card\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"strategy-name\",children:strategy}),/*#__PURE__*/_jsxs(\"p\",{className:\"strategy-count\",children:[count,\" \",count===1?\"Strategy\":\"Strategies\"]})]},strategy);})});};export default StrategyCards;","map":{"version":3,"names":["React","strategyArray","EmptyState","jsx","_jsx","jsxs","_jsxs","StrategyCards","_ref","selectedView","selectedDate","viewData","find","item","View","strategies","Value","strategyCounts","reduce","acc","strategy","length","className","children","Object","entries","map","_ref2","count"],"sources":["C:/Users/tiwar/Documents/trading-ui/src/components/StrategyCards.js"],"sourcesContent":["import React from \"react\";\r\nimport { strategyArray } from \"../data\";\r\nimport EmptyState from \"./EmptyState\";\r\n\r\nconst StrategyCards = ({ selectedView, selectedDate }) => {\r\n  // Find the view data that matches the selected view\r\n  const viewData = strategyArray.find((item) => item.View === selectedView);\r\n  \r\n  // Get the strategies for the selected date (or empty array if none)\r\n  const strategies = viewData?.Value[selectedDate] || [];\r\n\r\n  // Count occurrences of each strategy\r\n  const strategyCounts = strategies.reduce((acc, strategy) => {\r\n    acc[strategy] = (acc[strategy] || 0) + 1;\r\n    return acc;\r\n  }, {});\r\n\r\n  if (strategies.length === 0) {\r\n    return <EmptyState selectedDate={selectedDate} />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"strategy-container\">\r\n      {Object.entries(strategyCounts).map(([strategy, count]) => (\r\n        <div key={strategy} className=\"strategy-card\">\r\n          <p className=\"strategy-name\">{strategy}</p>\r\n          <p className=\"strategy-count\">{count} {count === 1 ? \"Strategy\" : \"Strategies\"}</p>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StrategyCards;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,aAAa,KAAQ,SAAS,CACvC,MAAO,CAAAC,UAAU,KAAM,cAAc,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEtC,KAAM,CAAAC,aAAa,CAAGC,IAAA,EAAoC,IAAnC,CAAEC,YAAY,CAAEC,YAAa,CAAC,CAAAF,IAAA,CACnD;AACA,KAAM,CAAAG,QAAQ,CAAGV,aAAa,CAACW,IAAI,CAAEC,IAAI,EAAKA,IAAI,CAACC,IAAI,GAAKL,YAAY,CAAC,CAEzE;AACA,KAAM,CAAAM,UAAU,CAAG,CAAAJ,QAAQ,SAARA,QAAQ,iBAARA,QAAQ,CAAEK,KAAK,CAACN,YAAY,CAAC,GAAI,EAAE,CAEtD;AACA,KAAM,CAAAO,cAAc,CAAGF,UAAU,CAACG,MAAM,CAAC,CAACC,GAAG,CAAEC,QAAQ,GAAK,CAC1DD,GAAG,CAACC,QAAQ,CAAC,CAAG,CAACD,GAAG,CAACC,QAAQ,CAAC,EAAI,CAAC,EAAI,CAAC,CACxC,MAAO,CAAAD,GAAG,CACZ,CAAC,CAAE,CAAC,CAAC,CAAC,CAEN,GAAIJ,UAAU,CAACM,MAAM,GAAK,CAAC,CAAE,CAC3B,mBAAOjB,IAAA,CAACF,UAAU,EAACQ,YAAY,CAAEA,YAAa,CAAE,CAAC,CACnD,CAEA,mBACEN,IAAA,QAAKkB,SAAS,CAAC,oBAAoB,CAAAC,QAAA,CAChCC,MAAM,CAACC,OAAO,CAACR,cAAc,CAAC,CAACS,GAAG,CAACC,KAAA,MAAC,CAACP,QAAQ,CAAEQ,KAAK,CAAC,CAAAD,KAAA,oBACpDrB,KAAA,QAAoBgB,SAAS,CAAC,eAAe,CAAAC,QAAA,eAC3CnB,IAAA,MAAGkB,SAAS,CAAC,eAAe,CAAAC,QAAA,CAAEH,QAAQ,CAAI,CAAC,cAC3Cd,KAAA,MAAGgB,SAAS,CAAC,gBAAgB,CAAAC,QAAA,EAAEK,KAAK,CAAC,GAAC,CAACA,KAAK,GAAK,CAAC,CAAG,UAAU,CAAG,YAAY,EAAI,CAAC,GAF3ER,QAGL,CAAC,EACP,CAAC,CACC,CAAC,CAEV,CAAC,CAED,cAAe,CAAAb,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}